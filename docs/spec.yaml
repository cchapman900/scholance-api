openapi: "3.0.0"
info:
  version: 0.0.1
  title: Scholance Project Service API
  description: |
    The Scholance API which serves all aspects related to projects. This may include
    projects themselves, submissions, but not asset creation (which is handled by the
    Asset service).
  contact:
    name: Chris
    email: chris@scholance.com
    url: http://chrischapman.co
servers:
  - url: https://api.scholance.com/project-service/v1/
paths:
  /projects:
    get:
      summary: List Projects
      description: List all projects with the given parameters
      tags:
        - Project
      operationId: listProjects
      parameters:
        - name: _limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: _page
          in: query
          description: pagination index
          required: false
          schema:
            type: integer
            format: int32
        - name: category
          in: query
          description: category to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: No projects found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Project
      description: Creates a new project
      tags:
        - Project
      operationId: createProject
      requestBody:
        description: Project to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid user type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    get:
      summary: Get Project
      description: Returns a project based on a single ID
      tags:
        - Project
      operationId: getProject
      responses:
        '200':
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Project
      description: Update an existing project
      tags:
        - Project
      operationId: updateProject
      requestBody:
        description: Project to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Project
      description: Deletes a single project based on the ID supplied
      tags:
        - Project
      operationId: deleteProject
      requestBody:
        description: >-
          Student to be added to project. Should eventually Put this in a header object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: Project deleted
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/supplemental-resources:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Add supplemental resource
      description: Add a supplemental resource to a project
      tags:
        - Project
        - Asset
      operationId: createSupplementalResource
      requestBody:
        description: Resource to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '201':
          description: Asset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/supplemental-resources/{asset_id}:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: asset_id
        in: path
        description: ID of asset
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    get:
      summary: Get Supplemental Resource
      description: >-
        Returns a single Supplemental Resource from a Project. Actually, this might actually need to
        be the actual file content
      tags:
        - Project
        - Asset
      operationId: getSupplementalResource
      responses:
        '200':
          description: resource response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Supplemental Resource
      description: Delete a supplemental resource
      tags:
        - Project
        - Asset
      operationId: deleteSupplementalResource
      responses:
        '204':
          description: Resource deleted
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/registration:
    parameters:
      - name: project_id
        in: path
        description: ID of project to delete
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    put:
      summary: Sign up for a project
      description: Add student to project workers
      tags:
        - Project
      operationId: projectSignup
      requestBody:
        description: Student to be added to project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful signup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Unregister from project
      description: Unregisters a Student from a Project
      tags:
        - Project
      operationId: projectSignoff
      requestBody:
        description: Student to be added to project
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: Successful signoff
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Project:
      allOf:
        - $ref: '#/components/schemas/NewProject'
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        supplementalResources:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        registrants:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - _id

    NewProject:
      properties:
        title:
          type: string
          example: "We need a logo"
        summary:
          type: string
          example: "We need a cutting-edge new logo for our new business"
        liaison:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        category:
          type: string
          example: Graphic Design
        fullDescription:
          type: string
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pulvinar
            euismod ipsum ut pharetra. Fusce non quam nec mi tincidunt ornare. In
            gravida id ante in gravida. Nunc tempor dui tempus ultrices rutrum.
            Curabitur ante dui, ultrices id condimentum ultricies, bibendum eget
            erat. Morbi id condimentum ligula, in pulvinar neque. Curabitur lectus
            diam, imperdiet ut neque eu, varius porta diam. Suspendisse id pellentesque
            metus, sit amet ultricies risus. Nunc imperdiet volutpat lectus, ac viverra
            magna tempus aliquam. Aliquam iaculis orci sed erat fringilla, et finibus
            purus porta. Duis ultrices odio sit amet cursus blandit. Duis sit amet
            purus ex. Ut auctor libero felis, eu tincidunt nisl finibus nec.
      required:
        - title
        - summary
        - liaison
        - organization

    User:
      properties:
        _id:
          type: string
          example: '59e5852830b8f53496f8e8ec'
        name:
          type: string
          example: 'John Doe'
        userType:
          type: string
          enum:
            - student
            - business
      required:
        - _id
        - name
        - userType

    BusinessUser:
      allOf:
        - $ref: '#/components/schemas/User'

    Organization:
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        name:
          type: string
          example: "Acme Inc."
      required:
        - _id
        - name

    Asset:
      description: >-
        A photo, video, link or text object to be used as a submission or supplemental resource
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        name:
          type: string
          example: "Our Logo"
        uri:
          type: string
          example: s3://bucket-name/path/

    Error:
      required:
        - message
      properties:
        message:
          type: string
          example: "An unexpected error occured"
        code:
          type: integer
          format: int32
          example: 1000
