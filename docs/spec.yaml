openapi: "3.0.0"
info:
  version: 0.1.1
  title: Scholance Project Service API
  description: |
    The Scholance API which serves all aspects related to projects. This may include
    projects themselves, submissions and assets
  contact:
    name: Chris
    email: chris@scholance.com
    url: http://chrischapman.co
servers:
  - url: https://api.scholance.com/project-service/v1/
paths:
  /projects:
    get:
      summary: List Projects
      description: List all projects with the given parameters
      tags:
        - Project
      operationId: listProjects
      parameters:
        - name: _limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: _page
          in: query
          description: pagination index
          required: false
          schema:
            type: integer
            format: int32
        - name: category
          in: query
          description: category to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: No projects found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create Project
      description: Creates a new project
      tags:
        - Project
      operationId: createProject
      requestBody:
        description: Project to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '201':
          description: Project created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Invalid user type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    get:
      summary: Get Project
      description: Returns a project based on a single ID
      tags:
        - Project
      operationId: getProject
      responses:
        '200':
          description: project response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update Project
      description: Update an existing project
      tags:
        - Project
      operationId: updateProject
      requestBody:
        description: Project to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Project
      description: Deletes a single project based on the ID supplied
      tags:
        - Project
      operationId: deleteProject
      responses:
        '204':
          description: Project deleted
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/supplemental-resources:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Add supplemental resource
      description: Add a supplemental resource to a project
      tags:
        - Project
        - Asset
      operationId: createSupplementalResource
      requestBody:
        description: Resource to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetFileUpload'
      responses:
        '201':
          description: Asset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/supplemental-resources/file:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Add supplemental resource
      description: Add a supplemental resource to a project
      tags:
        - Project
        - Asset
      operationId: createSupplementalResourceFile
      requestBody:
        description: Resource to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '201':
          description: Asset created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/supplemental-resources/{asset_id}:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: asset_id
        in: path
        description: ID of asset
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    get:
      summary: Get Supplemental Resource
      description: >-
        Returns a single Supplemental Resource from a Project. Actually, this might actually need to
        be the actual file content
      tags:
        - Project
        - Asset
      operationId: getSupplementalResource
      responses:
        '200':
          description: resource response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete Supplemental Resource
      description: Delete a supplemental resource
      tags:
        - Project
        - Asset
      operationId: deleteSupplementalResource
      responses:
        '204':
          description: Resource deleted
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/entries:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Sign up for a project
      description: Submit or resubmit completed work to a project
      tags:
        - Entry
      operationId: projectSignup
      requestBody:
        description: Completed work
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '204':
          description: Successful signup
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Submit or resubmit to a project
      description: Submit or resubmit completed work to a project
      tags:
        - Entry
      operationId: projectSubmission
      requestBody:
        description: Completed work
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entry'
      responses:
        '200':
          description: Successful submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Project Signoff
      description: Sign off of a project
      tags:
        - Entry
      operationId: projectSignoff
      responses:
        '204':
          description: Sucessful signoff
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/entries/{user_id}/assets:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: user_id
        in: path
        description: ID of the user, and subsequently the entry_id
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Create an Asset in an Entry
      description: Creates a non-file Asset (text, link, etc) to be included in a Entry
      tags:
        - Entry
        - Asset
      operationId: createEntryAsset
      requestBody:
        description: Asset
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        '201':
          description: Successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/entries/{user_id}/assets/file:
    parameters:
      - name: project_id
        in: path
        description: ID of project
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: user_id
        in: path
        description: ID of the user, and subsequently the entry_id
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    post:
      summary: Upload an Entry Asset file
      description: Creates a file Asset (image) to be included in an Entry
      tags:
        - Entry
        - Asset
      operationId: createEntryAssetFile
      requestBody:
        description: Asset
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetFileUpload'
      responses:
        '201':
          description: Successful upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: Invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{project_id}/entries/{user_id}/assets/{asset_id}:
    parameters:
      - name: project_id
        in: path
        description: ID of project to delete
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: user_id
        in: path
        description: ID of the user, and subsequently the entry_id
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
      - name: asset_id
        in: path
        description: ID of asset
        required: true
        schema:
          type: string
          format: ObjectId
          example: "507f1f77bcf86cd799439011"
    delete:
      summary: Delete an Asset from an Entry
      description: Removes an Asset from a project entry
      tags:
        - Entry
        - Asset
      operationId: projectUnsubmit
      responses:
        '204':
          description: Successful signoff
        '401':
          description: Not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Project:
      allOf:
        - $ref: '#/components/schemas/NewProject'
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        supplementalResources:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Entry'
        status:
          type: string
          example: active
        selectedStudentId:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Message'
      required:
        - _id

    NewProject:
      properties:
        title:
          type: string
          example: "We need a logo"
        summary:
          type: string
          example: "We need a cutting-edge new logo for our new business"
        liaison:
          $ref: '#/components/schemas/User'
        organization:
          $ref: '#/components/schemas/Organization'
        category:
          type: string
          example: Graphic Design
        fullDescription:
          type: string
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed pulvinar
            euismod ipsum ut pharetra. Fusce non quam nec mi tincidunt ornare. In
            gravida id ante in gravida. Nunc tempor dui tempus ultrices rutrum.
            Curabitur ante dui, ultrices id condimentum ultricies, bibendum eget
            erat. Morbi id condimentum ligula, in pulvinar neque. Curabitur lectus
            diam, imperdiet ut neque eu, varius porta diam. Suspendisse id pellentesque
            metus, sit amet ultricies risus. Nunc imperdiet volutpat lectus, ac viverra
            magna tempus aliquam. Aliquam iaculis orci sed erat fringilla, et finibus
            purus porta. Duis ultrices odio sit amet cursus blandit. Duis sit amet
            purus ex. Ut auctor libero felis, eu tincidunt nisl finibus nec.
        specs:
          type: array
          items:
            type: string
            example: Nunc imperdiet volutpat lectus
        deliverables:
          type: array
          items:
            properties:
              name:
                type: string
              mediaType:
                type: string
        reward:
          $ref: '#/components/schemas/Reward'
      required:
        - title
        - summary
        - liaison
        - organization

    Reward:
      properties:
        type:
          type: string

    MonetaryReward:
      allOf:
        - $ref: '#/components/schemas/Reward'
      properties:
        value:
          type: number

    OtherReward:
      allOf:
        - $ref: '#/components/schemas/Reward'
      properties:
        description:
          type: string

    User:
      properties:
        _id:
          type: string
          example: '59e5852830b8f53496f8e8ec'
        name:
          type: string
          example: 'John Doe'
        userType:
          type: string
          enum:
            - student
            - business
        linkedin:
          type: string
      required:
        - _id
        - name
        - userType

    Student:
      allOf:
        - $ref: '#/components/schemas/User'
      properties:
        school:
          type: string
        academicFocus:
          type: string
        interests:
          type: string
        twitter:
          type: string
        instagram:
          type: string
        website:
          type: string
        portfolioEntries:
          type: array
          items:
            $ref: '#/components/schemas/PortfolioEntry'

    Liaison:
      allOf:
        - $ref: '#/components/schemas/User'
      properties:
        position:
          type: string

    Organization:
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        name:
          type: string
          example: "Acme Inc."
        domain:
          type: string
        industry:
          type: string
        twitter:
          type: string
        linkedin:
          type: string
        about:
          type: string
        logo:
          $ref: '#/components/schemas/Asset'
        liaisons:
          type: array
          items:
            $ref: '#/components/schemas/Liaison'
      required:
        - _id
        - name

    Entry:
      description: >-
        A Student entry to a project. This is created when a Student signs up and serves as a
        container for the Assets that will be submitted upon submission
      properties:
        student:
          $ref: '#/components/schemas/Student'
        commentary:
          type: string
          example: >-
            Mumblecore bicycle rights neutra locavore forage keffiyeh tumblr four loko pinterest
            asymmetrical farm-to-table tote bag craft beer sartorial. Fam man braid banh mi, try-hard
            cliche hell of letterpress. Taiyaki iPhone yr, wolf vinyl hammock pitchfork organic
            flexitarian yuccie next level meggings fanny pack whatever.
        assets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        status:
          type: string
          example: 'submitted'

    PortfolioEntry:
      properties:
        project:
          $ref: '#/components/schemas/Project'
        submission:
          $ref: '#/components/schemas/Entry'
        visible:
          type: boolean
        selected:
          type: boolean

    NewAsset:
      description: >-
        A photo, video, link or text object as used in a project entry or supplemental resource
      required:
        - name
        - assetType
      properties:
        name:
          type: string
          example: "Our Logo"
        mediaType:
          type: string
          example: 'image'
          enum:
            - 'image'
            - 'link'
            - 'video'
            - 'text'
        uri:
          type: string
          example: s3://bucket-name/path/
        text:
          type: string
          example: >-
            Mumblecore bicycle rights neutra locavore forage keffiyeh tumblr four loko pinterest
            asymmetrical farm-to-table tote bag craft beer sartorial. Fam man braid banh mi, try-hard
            cliche hell of letterpress. Taiyaki iPhone yr, wolf vinyl hammock pitchfork organic
            flexitarian yuccie next level meggings fanny pack whatever.

    Asset:
      allOf:
        - $ref: '#/components/schemas/NewAsset'
      required:
        - _id
      properties:
        _id:
          type: string
          format: ObjectId
          example: '507f1f77bcf86cd799439011'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Message'

    AssetFileUpload:
      required:
        - name
        - file
      properties:
        name:
          type: string
        file:
          type: string
          format: base64encoded
          example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+P+/HgAFhAJ/wlseKgAAAABJRU5ErkJggg=="

    Message:
      required:
        - author
        - text
      properties:
        author:
          $ref: '#/components/schemas/User'
        text:
          type: string

    Error:
      required:
        - message
      properties:
        message:
          type: string
          example: "An unexpected error occured"
        code:
          type: integer
          format: int32
          example: 1000
